// Forms.less
// Base styles for various input types, form layouts, and states
// -------------------------------------------------------------


// GENERAL STYLES
// --------------

// Make all forms have space below them
form {
  margin: 0;
}

fieldset {
  padding: 0;
  margin: 0;
  border: 0;
  &.separated {
    border:1px solid #d0d0d0;
    border-width: 1px 0;
    padding-bottom: 10px;
  }
}

// Groups of fields with labels on top (legends)
legend {
  display: block;
  padding: 0 6px 0 0;
  margin-bottom: 10px;
  font-size: 12px;
  line-height: 31px;
  color: #666;
  border: 0;
  text-transform: uppercase;
  font-weight: 500;
  background-color: transparent;
  // Small legend
  &.small {
    margin-bottom: 10px;
  }

  //small text
  small {
    font-size: @baseLineHeight * .75;
    color: @grayLight;
  }
}



// Set font for forms
label,
input,
button,
select,
textarea {
  #font > .shorthand(@baseFontSize,normal,@baseLineHeight); // Set size, weight, line-height here
}
input,
button,
select,
textarea {
  font-family: @baseFontFamily; // And only set font-family here for those that need it (note the missing label element)
}

// Identify controls by their labels
label {
  display: block;
  margin-bottom: 5px;
  color: @grayDark;
}

// Inputs, Textareas, Selects
input,
textarea,
select,
.uneditable-input {
  display: inline-block;
  width: 210px;
  height: @baseLineHeight;
  padding: 4px;
  margin-bottom: 9px;
  font-size: @baseFontSize;
  line-height: @baseLineHeight;
  color: @gray;
  border: 1px solid @inputBorder;
  .border-radius(2px);
}
.uneditable-textarea {
  width: auto;
  height: auto;
}

// Inputs within a label
label input,
label textarea,
label select {
  display: block;
}

// Mini reset for unique input types
input[type="image"],
input[type="checkbox"],
input[type="radio"] {
  width: auto;
  height: auto;
  padding: 0;
  margin: 2px 0;
  display: inline-block;
  line-height: normal;
  cursor: pointer;
  .border-radius(0);
  border: 0 \9; /* IE9 and down */
}

input[type="image"] {
  border: 0;
}

// Reset the file input to browser defaults
input[type="file"] {
  width: auto;
  padding: initial;
  line-height: initial;
  border: initial;
  background-color: @inputBackground;
  background-color: initial;
  .box-shadow(none);
}

// Help out input buttons
input[type="button"],
input[type="reset"],
input[type="submit"] {
  width: auto;
  height: auto;
}

// Set the height of select and file controls to match text inputs
select,
input[type="file"] {
  height: 28px; /* In IE7, the height of the select element cannot be changed by height, only font-size */
  line-height: 28px;
}

// Reset line-height for IE
input[type="file"] {
  line-height: 18px \9;
}

// Chrome on Linux and Mobile Safari need background-color
select {
  width: 220px; // default input width + 10px of padding that doesn't get applied
  background-color: @inputBackground;
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
  height: auto;
}

// Remove shadow from image inputs
input[type="image"] {
  .box-shadow(none);
}

// Make textarea height behave
textarea {
  height: auto;
}

// Hidden inputs
input[type="hidden"] {
  display: none;
}



// CHECKBOXES & RADIOS
// -------------------

// Indent the labels to position radios/checkboxes as hanging
.radio,
.checkbox {
  padding-left: 18px;
}
.radio input[type="radio"],
.checkbox input[type="checkbox"] {
  float: left;
  margin-left: -18px;
}

// Move the options list down to align with labels
.controls > .radio:first-child,
.controls > .checkbox:first-child {
  padding-top: 5px; // has to be padding because margin collaspes
}

// Radios and checkboxes on same line
// TODO v3: Convert .inline to .control-inline
.radio.inline,
.checkbox.inline {
  display: inline-block;
  padding-top: 5px;
  margin-bottom: 0;
  vertical-align: middle;
}
.radio.inline + .radio.inline,
.checkbox.inline + .checkbox.inline {
  margin-left: 10px; // space out consecutive inline controls
}



// FOCUS STATE
// -----------

input,
textarea {
  .box-shadow(inset 0 1px 1px rgba(0,0,0,.075));
  @transition: border linear .2s, box-shadow linear .2s;
  .transition(@transition);
}
input:focus,
textarea:focus {
  border-color: rgba(82,168,236,.8);
  @shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(82,168,236,.6);
  .box-shadow(@shadow);
  outline: 0;
  outline: thin dotted \9; /* IE6-9 */
}
input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus,
select:focus {
  .box-shadow(none); // override for file inputs
  .tab-focus();
}



// INPUT SIZES
// -----------
input,textarea,select {
  width: 100%;
}

// General classes for quick sizes
.input-mini       { width: 50px; }
.input-small      { width: 90px; }
.input-medium     { width: 150px; }
.input-large      { width: 210px; }
.input-xlarge     { width: 270px; }
.input-xxlarge    { width: 530px; }


// DISABLED STATE
// --------------

// Disabled and read-only inputs
input[disabled],
select[disabled],
textarea[disabled],
input[readonly],
select[readonly],
textarea[readonly] {
  background-color: @inputDisabledBackground;
  border-color: #ddd;
  cursor: not-allowed;
}




// FORM FIELD FEEDBACK STATES
// --------------------------

// HTML5 invalid states
// Shares styles with the .control-group.error above
input:focus:required:invalid,
textarea:focus:required:invalid,
select:focus:required:invalid,
.field .error {
  color: #b94a48;
  border-color: #ee5f5b;
  &:focus {
    border-color: darken(#ee5f5b, 10%);
    .box-shadow(0 0 6px lighten(#ee5f5b, 20%));
  }
}



// FORM ACTIONS
// ------------

.form-actions {
  padding: (@baseLineHeight - 1) 20px @baseLineHeight;
  margin-top: @baseLineHeight;
  margin-bottom: @baseLineHeight;
  background-color: @grayLighter;
  border-top: 1px solid #ddd;
  .clearfix(); // Adding clearfix to allow for .pull-right button containers
}

// For text that needs to appear as an input but should not be an input
.uneditable-input {
  display: block;
  background-color: @inputBackground;
  border-color: #eee;
  .box-shadow(inset 0 1px 2px rgba(0,0,0,.025));
  cursor: not-allowed;
}

// Placeholder text gets special styles; can't be bundled together though for some reason
.placeholder(@grayLight);


// INPUT GROUPS
// ------------

// Allow us to put symbols and text within the input field for a cleaner look
.input-prepend,
.input-append {
  margin-bottom: 5px;
  input,
  select,
  .uneditable-input {
    *margin-left: 0;
    .border-radius(0 3px 3px 0);
    &:focus {
      position: relative;
      z-index: 2;
    }
  }
  .uneditable-input {
    border-left-color: #ccc;
  }
  .add-on {
    display: inline-block;
    width: auto;
    min-width: 16px;
    height: @baseLineHeight;
    padding: 4px 5px;
    .text-normal();
    line-height: @baseLineHeight;
    text-align: center;
    text-shadow: 0 1px 0 @white;
    vertical-align: middle;
    background-color: @grayLighter;
    border: 1px solid #ccc;
  }
  .add-on,
  .btn {
    .border-radius(3px 0 0 3px);
    position: relative;
    z-index: 5;
  }
  .active {
    background-color: lighten(@green, 30);
    border-color: @green;
  }
}
.input-prepend {
  .add-on,
  .btn {
    margin-right: -1px;
  }
}
.input-append {
  input,
  select
  .uneditable-input {
    .border-radius(3px 0 0 3px);
  	margin-bottom:0;
  }
  .uneditable-input {
    border-left-color: #eee;
    border-right-color: #ccc;
  }
  .add-on,
  .btn {
    padding-bottom: 3px !important;
    margin-left: -4px;
    .border-radius(0 3px 3px 0);
  }
}
// Remove all border-radius for inputs with both prepend and append
.input-prepend.input-append {
  input,
  select,
  .uneditable-input {
    .border-radius(0);
  }
  .add-on:first-child,
  .btn:first-child {
    margin-right: -1px;
    .border-radius(3px 0 0 3px);
  }
  .add-on:last-child,
  .btn:last-child {
    margin-left: -1px;
    .border-radius(0 3px 3px 0);
  }
}



// HORIZONTAL & VERTICAL FORMS
// ---------------------------

// Common properties
// -----------------

.form-inline,
.form-horizontal {
  input,
  textarea,
  select,
  .help-inline,
  .uneditable-input,
  .input-prepend,
  .input-append {
    display: inline-block;
    margin-bottom: 0;
  }
  // Re-hide hidden elements due to specifity
  .hide {
    display: none;
  }
}

.form-inline label {
  display: inline-block;
}
// Remove margin for input-prepend/-append
.form-inline .input-append,
.form-inline .input-prepend {
  margin-bottom: 0;
}
// Inline checkbox/radio labels (remove padding on left)
.form-inline .radio,
.form-inline .checkbox {
  padding-left: 0;
  margin-bottom: 0;
  vertical-align: middle;
}
// Remove float and margin, set to inline-block
.form-inline .radio input[type="radio"],
.form-inline .checkbox input[type="checkbox"] {
  float: left;
  margin-left: 0;
  margin-right: 3px;
}


input[type="text"],
input[type="date"],input[type="datetime"],input[type="datetime-local"],input[type="time"],
input[type="number"],input[type="range"],
input[type="url"],
input[type="password"],
input[type="email"],
textarea, select {
  .box-sizing(border-box);
  line-height:15px;
  display:inline-block;
  font-size:12px;
  color:#000;
  vertical-align:middle;
  margin:0px;
  .border-radius(2px) !important;
  border: 1px solid  #d0d0d0 !important;
  padding: 6px;
  outline:none !important;
  .box-shadow(inset 0 0 0 #000) !important;
  .box-shadow(none) !important;
  -moz-appearance: none !important;
  background: #fff;
  &:focus {
    .box-shadow(0px 0px 5px 0px #d0d0d0) !important;
    border-color: #b8b8b8 !important;
    outline:none !important;
  }
}

input[type="text"],
input[type="date"],input[type="datetime"],input[type="datetime-local"],input[type="time"],
input[type="number"],input[type="range"],
input[type="url"],
input[type="password"],
input[type="email"],
select{
  height: 27px;
}

select {
  padding: 4px;
  -moz-appearance: button-arrow-down !important;
}

.inline-input {
  border: 0;
  margin: 0 !important;
  vertical-align: baseline;
  .box-shadow(none);
  &:focus {
    .box-shadow(none) !important;
    .box-shadow(inset none) !important;
  }
}

.large-text-input {
  height: 37px !important;
  font-size: 16px !important;
  line-height: 25px !important;
}


/* FORM ELEMENTS */

form, ng-form {
    fieldset, .fieldset {
        .clearfix();
        .field {
            margin-bottom: 15px;
            width: 100%;
            .border-box();
                        .control {
            }
        }
        label {
              font-size: 11px;
              .text-semibold();
              color: @grayLight;
              text-transform: uppercase;
              height: 18px;

              input[type="checkbox"],
              input[type="radio"],
              .sd-checkbox,
              .sd-toggle {
                  float: left;
                  margin-right: 10px;
              }

              &.right {
                  input[type="checkbox"],
                  input[type="radio"],
                  .sd-checkbox,
                  .sd-toggle {
                      float: right;
                      margin-left: 10px;
                  }
              }
              &.inline-label {
                color: #333;
                text-transform: none;
                font-size: 13px;
                display: inline-block;
                margin-right: 20px;
                font-weight: 400;
              }
        }
        .multiple {
            display: flex;
            .field, .flex-field {
                flex: 1 1 auto;
                &:not(.btn) {
                  padding-right: 20px;
                }
                &:last-child:not(.btn) {
                    padding-right: 0;
                }
                &.no-grow {
                    flex: 0 1 auto;
                }
                &.no-shrink {
                    flex: 1 0 auto;
                }
            }
            .btn {
                white-space: nowrap;
            }
        }
        + legend {
            margin-top: 20px;
        }
        + fieldset, + .fieldset {
            margin-top: 20px;
        }
    }
    &.form-horizontal {
        .field {
            > label {
                width: 150px;
                padding-right: 20px;
                text-align: right;
                float: left;
            }
            .control {
                margin-left: 170px;
            }
        }
    }
}

form.flat, .form-flat {

  .title {
      padding: 0 10px 10px 0;
      color: @sd-text;
      font-size: 16px;
      line-height: 22px;
  }

  .required-info {
    display: none;
    font-size: 11px;
    color: #999;
    float: right;
  }

  fieldset, .fieldset {
    margin-bottom: 20px;
    position: relative;

    legend, .legend {
      padding: 0;
      color: @sd-text;
      font-size: 12px;
      text-transform: uppercase;
      .text-semibold();
      padding: 10px 0;
      margin-top: 20px;
    }

    .item {
      width: 100%;
      font-size: 13px;
      color: @sd-text;
      position: relative;
      .box-sizing(border-box);
      height: auto;
      line-height: 24px;
      //border-top: 1px dotted #ddd;
      padding: 10px 2px;

      &:last-child {
        //border-bottom: 1px dotted #ddd;
      }

      .required-asteriks {
        font-size: 12px;
        color: #999;
        position: absolute;
        right: 0;
        top: 8px;
      }
      label {
        color: @sd-text;
        min-width: 100px;
        margin-right: 10px;
        display: inline-block;
      }
      a {
        color: @sd-blue-text;
      }
      .info-value {
        display: inline-block;
        vertical-align: middle;
        .sdselect-btn {
          float: left;
          color: @sd-text;
          width: auto;
          .caret {
            margin-left: 5px;
          }
        }
      }
      .sd-toggle, .sd-checkbox {
        float: right;
        margin-top: 5px;
      }
      &.password {
        .info-value {
        -webkit-text-security: disc;
          .info-editable {
            -webkit-text-security: disc;
          }
        }
        .change-btn {
          &:hover {
        cursor: pointer;
          }
        }
      }
      p.info-editable {
        margin: 0;
      }
      .info-editable {
        width: 275px;
        border-color: rgba(0,0,0,0.10) !important;
        border-width: 0 0 1px 0 !important;
        border-radius: 0px !important;
        font-size: 13px;
        text-overflow: ellipsis;
        margin-left: -6px;
        background-color: transparent;
        color: #000 !important;
        box-sizing: border-box;
        margin-top: 0;
        transition: 0.3s;
        &:hover {
          border-color: rgba(0,0,0,0.25) !important;
        }
        &:focus {
          .box-shadow(0 1px 0 0 rgba(94,169,200,1)) !important;
          border-color: rgba(94,169,200,1) !important;
        }
      }
      textarea.info-editable {
        height: 150px;
        width: 100%;
        max-width: 100%;
        line-height: 18px;
        margin-left: 0;
      }
      select.info-editable {
        padding: 0 !important;
        border: 1px solid #d0d0d0 !important;
        &:focus {
          text-decoration: none !important;
        }
      }
    }

    &.label-light {
      label {
        color: @grayLight;
        text-transform: uppercase;
        font-size: 11px;
        .text-semibold();
      }
    }
  }
}

// sdSlider
[sd-slider].ui-slider {
    margin-left: 10px;
    border-top: 2px solid @sd-blue;
    .ui-slider-range {
        .transition(width .1s);
        margin-top: -2px;
        border-top: 2px solid @inputBorder;
    }
    .ui-slider-handle {
        width: 12px;
        height: 12px;
        top: -7px;
        margin-left: -6px;
        .transition(left .1s);
        .border-radius(50%);
        background-color: @sd-blue;
    }
    .ui-slider-thumb {
        font-size: 28px;
        text-align: center;
        color: white;
        
        position: absolute;
        margin-left: -27px;
        top: -50px;
        width: 50px;
        height: 50px;
        line-height: 50px;
        border-radius: 50px;
        background-color: @sd-blue;
        .scale(0);
        .translate3d(0,70px,0);
        .transition(all .2s ease-in-out);
        &:after {
            position: absolute;
            content: '';
            left: 0;
            border-radius: 28px;
            top: 35px;
            border-left: 25px solid transparent;
            border-right: 25px solid transparent;
            border-top-width: 28px;
            border-top-style: solid;
            border-top-color: @sd-blue;
            .translate3d(0,-8px,0);
            .transition(all .1s ease-in-out);
        }
        &.ui-slider-thumb-active {
            .scale(.4);
        }
    }
    .ui-slider-label {
        font-size: 8px;
        color: #c0c0c0;
        margin-top: -18px;
        text-transform: uppercase;
        &.left {
            float: left;
        }
        &.right {
            float: right;
        }
    }
    .ui-slider-indicator {
        font-size: 0;
        line-height: 0;
        padding-top: 7px;
        span {
            display: inline-block;
            height: 5px;
            box-sizing: border-box;
            border-left: 1px solid #d1d1d1;
            &:last-of-type {
                border-right: 1px solid #d1d1d1;
            }
        }
    }
}

.flex-header {
    display: flex;
    height: 20px;
    margin-bottom: 8px;
    .line {
        height: 1px;
        margin: auto 4px auto 0;
        background: #dcdcdc;
        flex: 1;
    }
    .flex-space {
        height: 1px;
        margin: auto 4px auto 0;
        background: transparent;
        flex: 1;
    }
    .flex-header-toggle {
        border: 0;
        padding: 0;
        margin: 0 5px 0;
        display: flex;
        background: transparent;
        i {
            -webkit-transition: all 0.2s ease;
            -o-transition: all 0.2s ease;
            transition: all 0.2s ease;
        }
        &.closed {
            i {
              .rotate(-90deg);
              margin: auto;
            }
        }
    }
    .flex-header-name {
        padding: 0 8px 0 0;
        margin: auto 0;
        font-size: 12px;
        line-height: 100%;
        .text-semibold();
        text-transform: uppercase;
        letter-spacing: 0.06em;
        .lighten-text {
            color: @gray;
            .text-normal();
        }
    }
    .flex-header-label {
        box-sizing: border-box;
        height: 16px;
        margin: auto 0;
        padding: 3px 6px 0;
        .border-radius(8px);
        color: @white;
        background:#bbb;
        font-size: 10px;
        line-height: 100%;
        letter-spacing: 0.06em;
        .text-normal();
    }
}





input, textarea, .dropdown-toggle {
    &.line-input {
        width: 100%;
        border-radius: 0 !important;
        border: 0 !important;
        border-bottom: 1px solid rgba(0,0,0,0.15)!important;
        background-color: transparent;
        &:hover {
            border-color: rgba(0,0,0,0.3) !important;
            background-color: transparent !important;
        }
        &:focus {
            box-shadow: 0 1px 0 0 @sd-blue !important;
            border-color: @sd-blue !important;
            background-color: transparent !important;
        }
    }
}