// Mixins.less
// Snippets of reusable CSS to develop faster and keep code readable
// -----------------------------------------------------------------


// UTILITY MIXINS
// --------------------------------------------------

// Clearfix
// --------
// For clearing floats like a boss h5bp.com/q
.clearfix {
	*zoom: 1;
	&:before,
	&:after {
		display: table;
		content: "";
	}
	&:after {
		clear: both;
	}
}

// Webkit-style focus
// ------------------
.tab-focus() {
	// Default
	outline: thin dotted #333;
	// Webkit
	outline: 5px auto -webkit-focus-ring-color;
	outline-offset: -2px;
}

// Center-align a block level element
// ----------------------------------
.center-block() {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// IE7 inline-block
// ----------------
.ie7-inline-block() {
	*display: inline; /* IE7 inline-block hack */
	*zoom: 1;
//comment
}

// IE7 likes to collapse whitespace on either side of the inline-block elements.
// Ems because we're attempting to match the width of a space character. Left
// version is for form buttons, which typically come after other elements, and
// right version is for icons, which come before. Applying both is ok, but it will
// mean that space between those elements will be .6em (~2 space characters) in IE7,
// instead of the 1 space in other browsers.
.ie7-restore-left-whitespace() {
	*margin-left: .3em;

	&:first-child {
		*margin-left: 0;
	}
}

.ie7-restore-right-whitespace() {
	*margin-right: .3em;

	&:last-child {
		*margin-left: 0;
	}
}

// Sizing shortcuts
// -------------------------
.size(@height: 5px, @width: 5px) {
	width: @width;
	height: @height;
}
.square(@size: 5px) {
	.size(@size, @size);
}

// Placeholder text
// -------------------------
.placeholder(@color: @placeholderText) {
	:-moz-placeholder {
		color: @color;
	}
	::-webkit-input-placeholder {
		color: @color;
	}
}

// Text overflow
// -------------------------
// Requires inline-block or block for proper styling
.text-overflow() {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}



// FONTS
// --------------------------------------------------

#font {
	#family {
		.serif() {
			font-family: Georgia, "Times New Roman", Times, serif;
		}
		.sans-serif() {
			font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
		}
		.monospace() {
			font-family: Menlo, Monaco, "Courier New", monospace;
		}
	}
	.shorthand(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
		font-size: @size;
		font-weight: @weight;
		line-height: @lineHeight;
	}
	.serif(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
		#font > #family > .serif;
		#font > .shorthand(@size, @weight, @lineHeight);
	}
	.sans-serif(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
		#font > #family > .sans-serif;
		#font > .shorthand(@size, @weight, @lineHeight);
	}
	.monospace(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
		#font > #family > .monospace;
		#font > .shorthand(@size, @weight, @lineHeight);
	}
}
	.text-light() {
		font-weight: 300;
	}
	.text-normal() {
		font-weight: 400;
	}
	.text-semibold() {
		font-weight: 500;
	}
	.text-bold() {
		font-weight: 700;
	}
	.text-extrabold() {
		font-weight: 800;
	}


// FORMS
// --------------------------------------------------

// Block level inputs
.input-block-level {
	display: block;
	width: 100%;
	min-height: 28px; /* Make inputs at least the height of their button counterpart */
	/* Makes inputs behave like true block-level elements */
	.box-sizing(border-box);
}


// Mixin for form field states
.formFieldState(@textColor: #555, @borderColor: #ccc, @backgroundColor: #f5f5f5) {
	// Set the text color
	> label {
		color: @textColor;
	}
	// Style inputs accordingly
	input,
	select,
	textarea {
		color: @textColor;
		border-color: @borderColor;
		&:focus {
			border-color: darken(@borderColor, 10%);
			.box-shadow(0 0 6px lighten(@borderColor, 20%));
		}
	}
	// Give a small background color for input-prepend/-append
	.input-prepend .add-on,
	.input-append .add-on {
		color: @textColor;
		background-color: @backgroundColor;
		border-color: @textColor;
	}
}



// CSS3 PROPERTIES
// --------------------------------------------------

// Border Radius
.border-radius(@radius: 5px) {
	border-radius: @radius;
}

// Drop shadows
.box-shadow(@shadow: 0 1px 3px rgba(0,0,0,.25)) {
	box-shadow: @shadow;
}
.box-shadow-both(@shadow1 , @shadow2) {
	box-shadow: @shadow1, @shadow2;
}

// Animate
.animate(@animation) {
  animation:  @animation;
}

// Transitions
.transition(@transition) {
	-webkit-transition: @transition;
			 -o-transition: @transition;
					transition: @transition;
}

// Transformations
.rotate(@degrees) {
	-webkit-transform: rotate(@degrees);
					transform: rotate(@degrees);
}
.scale(@ratio) {
	-webkit-transform: scale(@ratio);
					transform: scale(@ratio);
}
.scaleY(@ratio) {
	-webkit-transform: scaleY(@ratio);
					transform: scaleY(@ratio);
}
.scaleX(@ratio) {
	-webkit-transform: scaleX(@ratio);
					transform: scaleX(@ratio);
}
.translate(@x: 0, @y: 0) {
	-webkit-transform: translate(@x, @y);
					transform: translate(@x, @y);
}
.skew(@x: 0, @y: 0) {
	-webkit-transform: skew(@x, @y);
					transform: skew(@x, @y);
}
.translate3d(@x: 0, @y: 0, @z: 0) {
	-webkit-transform: translate(@x, @y, @z);
					transform: translate(@x, @y, @z);
}

// Background clipping
// Heads up: FF 3.6 and under need "padding" instead of "padding-box"
.background-clip(@clip) {
	-webkit-background-clip: @clip;
		 -moz-background-clip: @clip;
					background-clip: @clip;
}

// Box sizing
.box-sizing(@boxmodel) {
		box-sizing: @boxmodel;
}
.border-box() {
	.box-sizing(border-box);
}

// User select
// For selecting text on the page
.user-select(@select) {
	-webkit-user-select: @select;
		 -moz-user-select: @select;
			 -o-user-select: @select;
					user-select: @select;
-webkit-touch-callout: @select;
	 -khtml-user-select: @select;
			-ms-user-select: @select;
}

// Resize anything
.resizable(@direction: both) {
	resize: @direction; // Options: horizontal, vertical, both
	overflow: auto; // Safari fix
}

// CSS3 Content Columns
.content-columns(@columnCount, @columnGap: @gridColumnGutter) {
	-webkit-column-count: @columnCount;
		 -moz-column-count: @columnCount;
					column-count: @columnCount;
	-webkit-column-gap: @columnGap;
		 -moz-column-gap: @columnGap;
					column-gap: @columnGap;
}

// Opacity
.opacity(@opacity: 100) {
	opacity: @opacity / 100;
	 filter: ~"alpha(opacity=@{opacity})";
}



// BACKGROUNDS
// --------------------------------------------------

// Add an alphatransparency value to any background or border color (via Elyse Holladay)
#translucent {
	.background(@color: @white, @alpha: 1) {
		background-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
	}
	.border(@color: @white, @alpha: 1) {
		border-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
		.background-clip(padding-box);
	}
}

// Reset filters for IE
.reset-filter() {
	filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
}


// COMPONENT MIXINS
// --------------------------------------------------

// Horizontal dividers
// -------------------------
// Dividers (basically an hr) within dropdowns and nav lists
.nav-divider() {
	height: 1px;
	margin: ((@baseLineHeight / 2) - 1) 1px; // 8px 1px
	overflow: hidden;
	background-color: #e5e5e5;
	border-bottom: 1px solid @white;

	// IE7 needs a set width since we gave a height. Restricting just
	// to IE7 to keep the 1px left/right space in other browsers.
	// It is unclear where IE is getting the extra space that we need
	// to negative-margin away, but so it goes.
	*width: 100%;
	*margin: -5px 0 5px;
}


// Reset bootstrap
// ------------------
.reset-bootstrap-effects {
	-webkit-transition: none;
	-moz-transition: none;
	-ms-transition: none;
	-o-transition: none;
	transition: none;
}


// Reset button styling
// ------------------
.reset-button {
	border: 0;
	background: 0;
	color: #333;
}

// Navbar vertical align
// -------------------------
// Vertically center elements in the navbar.
// Example: an element has a height of 30px, so write out `.navbarVerticalAlign(30px);` to calculate the appropriate top margin.
.navbarVerticalAlign(@elementHeight) {
	margin-top: (@navbarHeight - @elementHeight) / 2;
}

// Popover arrows
// -------------------------
// For tipsies and popovers
#popoverArrow {
	.top(@arrowWidth: 5px, @color: @black) {
		bottom: 0;
		left: 50%;
		margin-left: -@arrowWidth;
		border-left: @arrowWidth solid transparent;
		border-right: @arrowWidth solid transparent;
		border-top: @arrowWidth solid @color;
	}
	.left(@arrowWidth: 5px, @color: @black) {
		top: 50%;
		right: 0;
		margin-top: -@arrowWidth;
		border-top: @arrowWidth solid transparent;
		border-bottom: @arrowWidth solid transparent;
		border-left: @arrowWidth solid @color;
	}
	.bottom(@arrowWidth: 5px, @color: @black) {
		top: 0;
		left: 50%;
		margin-left: -@arrowWidth;
		border-left: @arrowWidth solid transparent;
		border-right: @arrowWidth solid transparent;
		border-bottom: @arrowWidth solid @color;
	}
	.right(@arrowWidth: 5px, @color: @black) {
		top: 50%;
		left: 0;
		margin-top: -@arrowWidth;
		border-top: @arrowWidth solid transparent;
		border-bottom: @arrowWidth solid transparent;
		border-right: @arrowWidth solid @color;
	}
}
