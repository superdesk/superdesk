name: "CI"

on:
  push:
  pull_request:
  schedule:
    - cron: '0 5 * * *'

jobs:

  server:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: server

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: 3.6

    - run: sudo apt-get -y install libxml2-dev libxmlsec1-dev libxmlsec1-openssl libexempi3

    - run: docker-compose -f ../.travis-docker-compose.yml up -d

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('server/dev-requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip
          ${{ runner.os }}-

    - run: |
        python -m pip install --upgrade pip wheel setuptools
        pip install -r dev-requirements.txt

    - run: flake8

    - run: mypy .

    - run: nosetests

    - run: python manage.py app:initialize_data

  client:

    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: client

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-node@v1
      with:
        node-version: 12.x

    - uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('client/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm
          ${{ runner.os }}-

    - run: npm install --no-audit

    - run: node --max_old_space_size=4098 ./node_modules/.bin/grunt build
  
  docker:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - run: docker-compose build
